# -*- mode: ruby -*-
# vi: set ft=ruby :

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure("2") do |config|
  # The most common configuration options are documented and commented below.
  # For a complete reference, please see the online documentation at
  # https://docs.vagrantup.com.

  # Every Vagrant development environment requires a box. You can search for
  # boxes at https://vagrantcloud.com/search.
  config.vm.box = "bento/fedora-40"
  config.vm.box_version = "202404.23.0"

  config.vm.provision "file", source: "~/.vimrc", destination: ".vimrc"
  config.vm.provision "file", source: "~/.gitconfig", destination: ".gitconfig"

  config.vm.provision "tools", type: "shell", privileged: false, inline: <<-TOOLS
    sudo dnf install -y git tmux
  TOOLS

  # Not sure why I need this second block
  config.vm.provision "toolchain", type: "shell", privileged: true, inline: <<-TOOL
  dnf install -y git \
    gcc \
    valgrind \
    clang-tools-extra
  TOOL

  # Massive toolchain required for the RISC version of xv6. This make take several hours.
  config.vm.provision "riscv-toolchain", type: "shell", privileged: true, inline: <<-XV6
    dnf install -y autoconf \
      automake \
      python3 \
      libmpc-devel \
      mpfr-devel \
      gmp-devel \
      gawk \
      bison \
      flex \
      texinfo \
      patchutils \
      gcc-c++ \
      zlib-devel \
      expat-devel \
      libslirp-devel

    git clone https://github.com/riscv/riscv-gnu-toolchain
    cd ./riscv-gnu-toolchain

    echo 'export PATH="$PATH:/opt/riscv/bin"' >> /home/vagrant/.bashrc
    source /home/vagrant/.bashrc

    ./configure --prefix=/opt/riscv
    make -j5
  XV6

  config.vm.provision "qemu", type: "shell", privileged: true, inline: <<-QEMU
    dnf install -y pixman-devel \
      ninja-build \
      glib2-devel

    cd /tmp

    wget https://download.qemu.org/qemu-9.1.0.tar.xz
    tar xf qemu-9.1.0.tar.xz

    cd qemu-9.1.0

    ./configure --disable-kvm --disable-werror --prefix=/usr/local --target-list="riscv64-softmmu"
    make -j5
    make install
  QEMU

  config.vm.provision "pre-commit", type: "shell", privileged: false, inline: <<-PRECOMMIT
    python3 -m ensurepip --upgrade
    python3 -m pip install --upgrade pip
    pip3 install pre-commit
  PRECOMMIT

  # Disable automatic box update checking. If you disable this, then
  # boxes will only be checked for updates when the user runs
  # `vagrant box outdated`. This is not recommended.
  # config.vm.box_check_update = false

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine. In the example below,
  # accessing "localhost:8080" will access port 80 on the guest machine.
  # NOTE: This will enable public access to the opened port

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine and only allow access
  # via 127.0.0.1 to disable public access
  # config.vm.network "forwarded_port", guest: 80, host: 8080, host_ip: "127.0.0.1"

  # Create a private network, which allows host-only access to the machine
  # using a specific IP.
  config.vm.network "private_network", type: "dhcp"

  # Create a public network, which generally matched to bridged network.
  # Bridged networks make the machine appear as another physical device on
  # your network.
  # config.vm.network "public_network"

  # Share an additional folder to the guest VM. The first argument is
  # the path on the host to the actual folder. The second argument is
  # the path on the guest to mount the folder. And the optional third
  # argument is a set of non-required options.
  # config.vm.synced_folder "../data", "/vagrant_data"

  # Disable the default share of the current code directory. Doing this
  # provides improved isolation between the vagrant box and your host
  # by making sure your Vagrantfile isn't accessable to the vagrant box.
  # If you use this you may want to enable additional shared subfolders as
  # shown above.
  # config.vm.synced_folder ".", "/vagrant", disabled: true

  # Provider-specific configuration so you can fine-tune various
  # backing providers for Vagrant. These expose provider-specific options.
  # Example for VirtualBox:
  #
  config.vm.provider "virtualbox" do |vb|
    # Display the VirtualBox GUI when booting the machine
    vb.gui = false

    # Customize the amount of memory on the VM:
    vb.cpus = 4
    vb.memory = "4096"
  end
  #
  # View the documentation for the provider you are using for more
  # information on available options.

  # Enable provisioning with a shell script. Additional provisioners such as
  # Ansible, Chef, Docker, Puppet and Salt are also available. Please see the
  # documentation for more information about their specific syntax and use.
  # config.vm.provision "shell", inline: <<-SHELL
  #   apt-get update
  #   apt-get install -y apache2
  # SHELL
end
